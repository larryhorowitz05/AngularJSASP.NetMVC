@using Telerik.Web.Mvc.UI
@using Telerik.Web.Mvc.UI.Fluent
@using MML.Common.Helpers
@using MML.Contracts
@using MML.Web.LoanCenter.ViewModels;
@using System.Linq;
<script src="../../../../Scripts/SystemAdminContacts.js" type="text/javascript"></script>
<script src="@Url.Content( "~/Scripts/ContactsControlsValidationDesign.js" )"  type="text/javascript"></script>
<div style="border: 1px solid #e6e6e6; border-top: 0px; border-radius: 5px 5px 0px 0px;
    margin-top: 14px;color: #3d3d3d;font-family:Arial;">
    <div style="border-radius: 5px 5px 0px 0px; background-color: #f2f2f2; width: 953px;
        padding: 7px 0px 10px 15px;">
        <span style="font-size: 16px; font-weight: bold;">Business Contacts</span>
        <br />
        <br />
        <span style="font-size: 16px; font-weight: bold;vertical-align: middle;">Filter:</span>
        @{
            List<SelectListItem> contactTypes = new List<SelectListItem>();
            List<SelectListItem> contactActivity = new List<SelectListItem>();

            //contactTypes.Add( new SelectListItem { Text = "Contact Type", Value = "-1" } );
            contactTypes.Add( new SelectListItem { Text = "All Contact Types", Value = "-1", Selected = true } );

            contactActivity.Add( new SelectListItem { Text = "All", Value = "-1", Selected = @Model.CurrentActivity.ToString().Equals( "-1" ) } );
            contactActivity.Add( new SelectListItem { Text = "Active", Value = "0", Selected = @Model.CurrentActivity.ToString().Equals( "0" ) } );
            contactActivity.Add( new SelectListItem { Text = "Inactive", Value = "1", Selected = @Model.CurrentActivity.ToString().Equals( "1" ) } );

            foreach ( var item in Enum.GetValues( typeof( MML.Web.LoanCenter.Helpers.Enums.SystemAdminContactTypesEnum ) ).Cast<MML.Web.LoanCenter.Helpers.Enums.SystemAdminContactTypesEnum>() )
            {
                contactTypes.Add( new SelectListItem
                {
                    Text = item.GetStringValue(),
                    Value = ( ( int )item ).ToString(),
                    Selected = ( ( int )item ).ToString().Equals( @Model.CurrentContactType.ToString() )
                } );

            }

        }
         <span class="imp-span-ddl-contacts-container ">
              @Html.DropDownList( "contactTypes", contactTypes.OrderBy( x => x.Text ), new { @class = "imp-ddl-contacts", @onchange = "onChangeContactType", @id ="contactTypes", @style = "width:240px;" } as object )
         </span>
        <span class="imp-span-ddl-contacts-container ">
              @Html.DropDownList( "isContactActive", contactActivity, new { @class = "imp-ddl-contacts", @onchange = "onChangeContactActive", @id ="isContactActive", @style = "width:240px;" } as object )
         </span>

        @*<div class="gobutton imp-button-hxxs-wxs-prim" style="height: auto;" onclick="Contacts.Search(this)">Go</div>*@
        <span class="gobutton imp-button-div-hxxs-wxs-prim" onclick="Contacts.Search(this)" style="vertical-align: bottom; width: 21px;margin-bottom: 1px;">Go </span>
        <div style="text-align: right; float: right; cursor: pointer; margin-right: 22px;
            clear: both; margin-top: 3px;" onclick="Contacts.OpenCompanyPopup(0)" title="Add Company">
            <div class="plusCC-hb circle-text active"  title="Add Company" style="margin-right: 4px;float: left;margin-left: 1px;">
                <div class="circe-text-size"> + </div>
            </div>
            <div style="padding-top: 4px; float: right; font-weight: bold;"> Add Company</div>
        </div>
    </div>
    <div class="busniess-contacts-col-header">
        <div class="business-contacts-col-1">
            Company/Contact Name
        </div>
        <div class="business-contacts-col-2">
            Contact Phone
        </div>
        <div class="business-contacts-col-3">
            Contact Email
        </div>
        <div class="business-contacts-col-4">
            Address
        </div>
        <div class="business-contacts-col-5">
            Type
        </div>
    </div>
    @if ( Model.ContactCompaniesAndUsers.Count > 0 )
    {
        List<MML.Contacts.CCompaniesAndContacts> allItems = Model.ContactCompaniesAndUsers;
        List<MML.Contacts.CCompaniesAndContacts> contactParents = allItems.Where( m => m.ContactId == -1 ).ToList();
        foreach ( MML.Contacts.CCompaniesAndContacts company in contactParents )
        {
            List<MML.Contacts.CCompaniesAndContacts> children = allItems.Where( m => m.ContactId != -1 && m.CompanyId == company.CompanyId ).ToList();
        <div class="busniess-contacts-row-container">
            <div class="busniess-contacts-row-parent" style="color: @( company.Deactivated ? String.Format( "{0}", "Gray" ) : String.Format( "{0}", "Black" ));" >
                <div class="companyId">@company.CompanyId</div>
                <div class="businessContactsContactType">@company.ContactType</div>
                <div class="business-contacts-col-1 busniess-contacts-row-parent-col-1">
                    @if (children.Count > 0)
                    {
                        <div class="imp-aus-arrow-collapsed-div business-contacts-child-indicator expand-@company.IsExpandable" onclick="Contacts.CollapseExpandCompanyContacts(this)" style="margin-top: 14px;">
                        </div>

                        <div style="float: left; margin-top:0px; cursor:pointer;" title="@company.CompanyName" onclick="Contacts.CollapseExpandCompanyContacts(this)">
                            @( company.CompanyName.Length > 23 ? String.Format( "{0}...", company.CompanyName.Substring( 0, 19 ) ) : company.CompanyName)
                            
                        </div>
                    }
                    else
                    {
                        <div class="business-contacts-child-indicator no-children">
                        </div>
                        
                        <div style="float: left; margin-top:0px;" title="@company.CompanyName">
                            @( company.CompanyName.Length > 23 ? String.Format( "{0}...", company.CompanyName.Substring( 0, 19 ) ) : company.CompanyName)
                        </div>
                    }
                </div>
                <div class="business-contacts-col-2">
                    @company.CompanyPhone &nbsp;
                </div>
                <div class="business-contacts-col-3" title="">
                    &nbsp;
                </div>
                <div class="business-contacts-col-4" title="@String.Format( "{0}, {1}, {2}", company.StreetAddress, company.City, company.State )">
                    @(String.Format( "{0}, {1}, {2}", company.StreetAddress, company.City, company.State ).Length > 24 ? String.Format( "{0}...", String.Format( "{0}, {1}, {2}", company.StreetAddress, company.City, company.State ).Substring( 0, 23 ) ) : String.Format( "{0}, {1}, {2}", company.StreetAddress, company.City, company.State ))
                </div>
                <div class="business-contacts-col-5" title="@( ( ( MML.Web.LoanCenter.Helpers.Enums.SystemAdminContactTypesEnum )company.ContactType ).GetStringValue())">
                    @(( ( MML.Web.LoanCenter.Helpers.Enums.SystemAdminContactTypesEnum )company.ContactType ).GetStringValue().Length > 15 ? String.Format( "{0}...", ( ( MML.Web.LoanCenter.Helpers.Enums.SystemAdminContactTypesEnum )company.ContactType ).GetStringValue().Substring( 0, 13 ) ) : ( ( MML.Web.LoanCenter.Helpers.Enums.SystemAdminContactTypesEnum )company.ContactType ).GetStringValue())
                    <input type="hidden" id="hdnCompanyType_@{@company.CompanyId}" value="@company.ContactType"/>
                </div>
                <div class="business-contacts-col-8">

                   <div class="plusCCon-hb circle-text active" title="Add Contact" onclick="Contacts.AddContact(this)" style="margin-right: 2px;">
                        <div>+</div>
                    </div>
                </div>
                <div class="business-contacts-col-6">
                    <div  class="imp-button-pen businessCCompanyEdit active" title="Edit Company"> </div>
                </div>
                <div class="business-contacts-col-7">
                    @if ( children.Where( c => c.HasAssociatedLoans ).ToList().Count == 0 )
                    {
                        <div class="minCCon-hb circle-text active" title="Delete Company" onclick="Contacts.DeleteContact('You are attempting to delete an entire company. This will result in all associated contacts being deleted. Do you wish to continue?', this)"
                            style="margin-right: 2px;">                            
                            <div>
                                <hr/>
                            </div>
                        </div>
                }
                </div>
            </div>
            @if ( children.Count > 0 )
            {
                foreach ( MML.Contacts.CCompaniesAndContacts user in children )
                {
                <div class="busniess-contacts-row-child-container">
                    <div class="business-contacts-row-child" style="color: @( user.IsContactDeactivated ? String.Format( "{0}", "Gray" ) : String.Format( "{0}", "Black" ));">
                        <div class="userId">@user.ContactId</div>
                        @*<div class="companyId">@company.CompanyId</div>*@
                        
                        <div class="busniess-contacts-row-child-col-1" title="@String.Format( "{0} {1}", user.FirstName, user.LastName )">
                            @(String.Format( "{0} {1}", user.FirstName, user.LastName ).Length > 23 ? String.Format( "{0}...", String.Format( "{0} {1}", user.FirstName, user.LastName ).Substring( 0, 21 ) ) :
                            String.Format( "{0} {1}", user.FirstName, user.LastName )
                            )
                        </div>
                        <div class="business-contacts-col-2">
                            @user.ContactPhoneNumber &nbsp;
                        </div>
                        <div class="business-contacts-col-3" title="@user.Email">
                            @(user.Email.Length > 20 ? String.Format( "{0}...", user.Email.Substring( 0, 19 ) ) : user.Email)
                        </div>
                        <div class="business-contacts-col-4" title="">
                            &nbsp;
                        </div>
                        <div class="business-contacts-col-5">
                            &nbsp;
                        </div>
                        <div class="business-contacts-col-8">
                            &nbsp;
                        </div>
                        <div class="business-contacts-col-6">

                        <div  class="imp-button-pen businessCContactsEdit active" title="Edit Contact"> </div>
                        </div>
                        <div class="business-contacts-col-7">
                        @if(!user.HasAssociatedLoans)
                        {
                        <div class="minCCon-hb circle-text active" title="Delete Contact" onclick="Contacts.DeleteContact('You are attempting to delete an entire contact. Do you wish to continue?', this)"
                            style="margin-right: 2px;">
                                    <div><hr></div>
                         </div>
                            }
                        </div>
                    </div>
                </div>
                }
            }
        </div>
        }
    }
    <div class="busniess-contacts-footer">
        <div class="busniess-contacts-footer-container">

            <div class="business-contacts-footer-nav business-contacts-footer-nav-left" onclick="Contacts.PageNavigation(this, @Model.PageCount, @Model.CurrentPage)">
                
            </div>
            
            
            <div style="float: left;" class="pages-container">
                @if ( Model.StartPage > 1 )
                {
                    <div class="business-contacts-footer-numbers" onclick="Contacts.GetTenPages('false', @Model.PageCount, @Model.CurrentPage, @Model.EndPage, this)">
                        ...
                    </div>
                }
                @for ( int i = @Model.StartPage; i <= @Model.EndPage; i++ )
                {
                    if ( Model.CurrentPage == i )
                    { 
                    <div class="business-contacts-footer-numbers business-contacts-footer-numbers-value page-selected" onclick="Contacts.SelectPage(this)">
                        @(i)
                    </div>
                    }
                    else
                    {
                    <div class="business-contacts-footer-numbers business-contacts-footer-numbers-value" onclick="Contacts.SelectPage(this)">
                        @(i)
                    </div>
                    }

                }
                @if ( Model.EndPage < Model.PageCount )
                {
                    <div class="business-contacts-footer-numbers" onclick="Contacts.GetTenPages('true', @Model.PageCount, @Model.CurrentPage, @Model.EndPage, this)">
                        ...
                    </div>
                }
            </div>

                <div class="business-contacts-footer-nav business-contacts-footer-nav-right" style="float: right;" onclick=" Contacts.PageNavigation(this, @Model.PageCount, @Model.CurrentPage)">
                    
                </div>
            
        </div>
    </div>
    <input type="hidden" id="totalPages" value="@Model.PageCount"/>
</div>
@*<span id="resutlMessge" style="font-size:15px; font-weight:bold; display:none;">Ovo je poruka nakon neke operacije koja treba biti oznacena!</span>*@
<div class="customMessage imp-div-chooseBuyerSellerAgentPoPup-container" >
    <div class="imp-div-chooseBuyerSellerAgentPoPup-title " style="float:left;">
        Warning
    </div>
     <div class=" imp-div-close-x" style="float:right;margin-top:5px;margin-right: 5px;" onclick="Contacts.ClosePopup()"></div>
     <div class="imp-div-globalToLoanContactsSeparator"></div>
    <div style="padding: 10px; text-align: left;min-height: 45px;">
        <span id="spanMessage"></span>

    </div>
     <div class="imp-div-globalToLoanContactsSeparator"></div>
    <div class="imp-div-chooseBuyerSellerAgentPoPup-button-container">
            <div class="imp-button-contacts-hm-wm-sec" onclick="Contacts.ClosePopup()">Cancel</div>
            <div class="imp-button-contacts-hm-wm-prim imp-div-businesscontacts-secondnbutton" onclick="Contacts.ContinueDeletion(this)">Continue</div>  
    </div>
    <div style="clear: both"></div>
</div>
<style type="text/css">
    div
    {
        font-size: 12px;
    }

    .companyId, .userId, .businessContactsContactType
    {
        display: none;
    }
    
    body
    {
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }
   

</style>

<script type="text/javascript">
    InitializeContactsControlsEvents();   
    $(document).ready(function() {

        InitializeSystemAdminContactsEvents();
       
    });
</script>
